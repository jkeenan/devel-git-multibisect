TODO list for Perl module Test::Multisect

2. Create a data structure in the object similar to 'transitions' that
can be accessed to look up results of multisecting -- DONE.

3. Use 'excluded_targets' to avoid re-running particular test files once we've
completed that target.

Follow-up (2016-10-30):  This exclusion probably is not relevant under AllCommits, since
our objective there is to be comprehensive rather than selective.  Hence, we
probably don't need to change AllCommits::run_test_files_on_all_commits().
The exclusion would probably be better used in
Transitions::multisect_all_targets().  There, each invocation of 
run_test_files_on_one_commit() needs to be told what targets should now be
excluded.  This would have to be determined within multisect_all_targets().
This feature will be nice to have, but probably can wait until a later
release.

4. Decide what to do with 'examine_transitions()', as its behavior depends on
its caller.  Coverage improvement needed for:

    next unless (defined $arr[$i] and defined $arr[$i-1]);

-- DONE

5. Coverage:  need to cover non-verbose runs of prepare_multisect_hash().

6. Coverage:  In run_test_files_on_one_commit(), need to cover a branch in:

    $commit //= $self->{commits}->[0]->{sha};

7. Coverage: Test::Multisect::Auxiliary::validate_list_sequence().

    if (defined $list->[$j]) { $lpd = $list->[$j]; }

8. Documentation: Test::Multisect::Auxiliary::validate_list_sequence() -- DONE.
Several methods in Test::Multisect.

9. Better name for identify_transitions() -- DONE.

10. Method comparable to examine_transitions() to extract useful information
transition points from 'bisected_outputs' or 'xall_outputs' once
identify_transitions() has been run. -- DONE.

11. Consider placing methods needed for all commits versus bisected commits in
separate packages -- DONE.

12. Get better package names than Allcommits and Selectedcommits -- DONE.

13. Test on Perl 5 source code.

14. Test CPAN distros that only use Module::Build.

15. Review all source code for locations where verbose output would be
helpful; then implement and test.

16. Assess all comments re request for naming advice on perl.module-authors.

17.  See how much of this .git crap can be removed from MANIFEST.  Example.

.git/modules/t/lib/dummyrepo/objects/00/62245858565cf094d92f81211e60517e1e1816
.git/modules/t/lib/dummyrepo/objects/17/5ac99388aff7399bace6f9112b8fb57607797c
.git/modules/t/lib/dummyrepo/objects/19/9494ee204dd78ed69490f9e54115b0e83e7d39
.git/modules/t/lib/dummyrepo/objects/1c/8d83fcff7400da0f68d016e9018a5de134868e

18. Created option such that, during configure_command and make_command,
errors will be written to a per-commit error file rather than to STDERR.  For
future release.

19. Considering adding something to Opts to designate the fundamental branch
and then doing a checkout of that branch in preparations for multisecting.
