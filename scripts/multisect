#!/usr/bin/env perl
# multisect:  command-line utility implementing Test::Multisect
eval 'exec /usr/bin/env perl  -S $0 ${1+"$@"}'
  if 0;    # not running under some shell
use strict;
use warnings;
use Test::Multisect;

=head1 NAME

multisect - Run test file(s) at consecutive git commits

=head1 SYNOPSIS



=head1 DESCRIPTION

F<multisect> is a command-line utility identifying the point(s) in a software
project's F<git> commit history where specific test files begin to experience
failures.

A tool like F<git bisect> or the Perl 5 core distribution's
F<Porting/bisect-runner.pl> is useful for determining the B<first> point at
which a given test file began to fail.  But what if you have reason to believe
that, over a large number of commits, that test file has begun to fail at
B<multiple> points?  In that case simply knowing the first commit at which a
file failed may not be sufficient for diagnostic purposes.  Over a large
number of commits a given test file may fail in different or multiple ways.
You may want to have the test output from B<each> commit available for
analysis.

F<multisect> is a developer's tool designed to assist in such analysis.

=head2 A Use Case:  Perl 5 Blead on FreeBSD


=cut

# Local Variables:
#   mode: cperl
#   cperl-indent-level: 4
#   fill-column: 100
# End:
# vim: expandtab shiftwidth=4 shiftround softtabstop=4 textwidth=80 filetype=perl syntax=perl wrapmargin=6:
