#!/usr/bin/env perl
# multisect:  command-line utility implementing Test::Multisect
eval 'exec /usr/bin/env perl  -S $0 ${1+"$@"}'
  if 0;    # not running under some shell
use strict;
use warnings;
use Test::Multisect::Opts qw( process_options );
use Carp;
use Cwd;
use Data::Dumper;
use Data::Dump qw(pp);
use Getopt::Long;

=head1 NAME

multisect - Run test file(s) at consecutive git commits

=head1 SYNOPSIS



=head1 DESCRIPTION

F<multisect> is a command-line utility identifying the point(s) in a software
project's F<git> commit history where specific test files begin to experience
failures.

A tool like F<git bisect> or the Perl 5 core distribution's
F<Porting/bisect-runner.pl> is useful for determining the B<first> point at
which a given test file began to fail.  But what if you have reason to believe
that, over a large number of commits, that test file has begun to fail at
B<multiple> points?  In that case simply knowing the first commit at which a
file failed may not be sufficient for diagnostic purposes.  Over a large
number of commits a given test file may fail in different or multiple ways.
You may want to have the test output from B<each> commit available for
analysis.

F<multisect> is a developer's tool designed to assist in such analysis.

=head2 A Use Case:  Perl 5 Blead on FreeBSD

Perl 5.24.0 was released in May 2016.  Shortly thereafter extensive changes to
source code pertaining to the functionality of locales was merged into the
master branch (known as I<blead>).  These code changes were carefully reviewed
and fine-tuned on the basis of reviewers' comments.  The changes were also
tested on a variety of platforms in smoke tests submitted by users.  All
appeared well.

But during the next several months most of those smoke tests came from users
running on Linux, with a handful from Darwin and MSWin32.  For some time there
were no smoke tests coming from operating systems such as FreeBSD and OpenBSD.
In August 2016 one user set up a FreeBSD-10.3 virtual machine and began
submitting smoke test reports.  Right away these were test failures which were
addressed.  Again, all appeared well.

In October 2016, however, the FreeBSD Project released a new,
production-recommended version of that operating system:  FreeBSD-11.  The user
who had been contributing smoke tests for FreeBSD-10.3 now began testing Perl 5
blead on FreeBSD-11 as well.  Test failures quickly showed up in
F<lib/locale.t>.  Use of F<git bisect> suggested that the first commit of that
file to fail was made months earlier, in May 2016.  More surprisingly, the
specific content of the test failure in May was B<different> from the same
file's failure content in October.  The inference:  Changes in locale-related
code were failing at B<multiple> points on FreeBSD-11 over that six-month
period.  But since no smoke test reports were being submitted from FreeBSD-11
during that time, the failures were undetected.

As an aid to diagnosing the problem, we identified the most recent commit at
which F<lib/locale.t> tested successfuly on FreeBSD-11.  We tested the next
commit -- the first failing commit -- and were surprised to find that its
specific failure content was different from what we were observing at the HEAD
of blead.  This raised the possibility of multiple locale-related problems
emerging at different points during that six-month period.  We then built the
F<minor> versions of Perl 5 released during this time:  5.25.1, 5.25.2, etc.  We
noted that at 5.25.1 all tests in F<lib/locale.t> were passing, but by 5.25.2
the same failures we were seeing at HEAD were already present.  We decided to
capture the output of F<lib/locale.t> at B<every> commit from the first failing
commit to the commit at which that file began to fail in the same way as at
HEAD.

That was the inspiration for F<multisect>.

=cut

my $params = process_options();
pp($params);

# Local Variables:
#   mode: cperl
#   cperl-indent-level: 4
#   fill-column: 100
# End:
# vim: expandtab shiftwidth=4 shiftround softtabstop=4 textwidth=80 filetype=perl syntax=perl wrapmargin=6:
